{% extends 'base.twig' %}

{% block content %}
    <h1>Verwalte die Mitglieder deiner Gruppen</h1>
    <div class="group-chooser">
        <form class="pure-form">
            <fieldset>
                <label for="group">Deine Gruppe&nbsp;</label>
                <select name="ou" id="group" onchange="this.form.submit()">
                    {% for i in ownedGroups|keys %}
                        <option {% if ownedGroups[i]['ou'][0] == selectedGroup %}selected
                                {% endif %}value="{{ ownedGroups[i]['ou'][0] }}">{{ ownedGroups[i]['cn'][0] }}</option>
                    {% endfor %}
                </select>
            </fieldset>
        </form>
    </div>
    <p>Als KoordinatorIn einer Gruppe kannst du hier die Mitglieder verwalten. Falls du für mehrere Gruppen
        verantwortlich bist, kannst du die entsprechende oben rechts auswählen.</p>
    <p>Zum <a href="#" class="button-success pure-button button-small" id="trigger-filter-none">Hinzufügen von
            Mitgliedern</a>, wähle unter "Anzeigen" <em>Alle</em> aus
        und suche dann nach dem jeweiligen Mitglied - dann musst du nur noch auf den Button <em>hinzufügen</em> klicken.
        Fertig!
    </p>
    <div id="member-list">
        <form class="pure-form bold-legend pure-g">
            <fieldset class="pure-u-1 pure-u-md-1-2 inline-block-labels">
                <legend>Anzeigen...</legend>
                <i class="icon-filter font-icon">&#xe817;</i>
                <label for="filter-by-none">
                    <input id="filter-by-none" type="radio" name="filter" onclick="setFilter(this, null)">
                    Alle
                </label>
                <label for="filter-by-new">
                    <input id="filter-by-new" type="radio" name="filter" onclick="setFilter(this, fNew)">
                    Neue Anfragen
                </label>
                <label for="filter-by-member">
                    <input id="filter-by-member" type="radio" name="filter" onclick="setFilter(this, fMember)"
                           checked>
                    Gruppen-Mitglieder
                </label>
            </fieldset>
            <fieldset class="pure-u-1 pure-u-md-1-2">
                <legend>Suchen nach...</legend>
                <i class="icon-search font-icon">&#xe816;</i>
                <input type="text" class="search pure-input-1-2" placeholder="Name, Email...">
            </fieldset>
        </form>
        <table class="full-width pure-table pure-table-bordered">
            <thead>
            <tr>
                <th class="sort asc" data-sort="name">Name</th>
                <th class="sort" data-sort="email">E-Mail-Adresse</th>
                <th class="sort" data-sort="is_pending">Aktion</th>
            </tr>
            </thead>
            <tbody class="list">
            <tr id="list-item" class="table-row">
                <td class="name"></td>
                <td class="email"></td>
                <td class="actions"></td>
                <td class="is_owner hidden"></td>
                <td class="is_member hidden"></td>
                <td class="is_pending hidden"></td>
            </tr>
            </tbody>
        </table>
        <ul class="pagination"></ul>
    </div>

    <form method="POST" id="send-action">
        <input type="hidden" name="ou" id="ou" value="{{ selectedGroup }}"/>
        <input type="hidden" name="uid" id="uid"/>
        <input type="hidden" name="action" id="action"/>
    </form>
    <hr class="spacer">
    <form action="{{ path('POST_members_guests_subscribe') }}" method="POST" class="pure-form" id="setup-guest">
        <fieldset>
            <legend>Gäste</legend>
            <p>
                Du möchtest einen externen Gast dem Verteiler hinzufügen? Dann trage ihn hier mit Namen und Mail Adresse
                ein:
            </p>
            <input type="hidden" name="ou" id="ou" value="{{ selectedGroup }}"/>
            <input type="text" name="name" id="guest-name" placeholder="Name" required/>
            <input type="email" name="mail" id="guest-mail" placeholder="Mail" required/>

            <button type="submit" class="pure-button pure-button-primary" value="Login">
                <i class="icon-add font-icon">&#xe820;</i>&ensp;Eintragen
            </button>
        </fieldset>
    </form>
{% endblock %}

{% block scripts %}
    {{ parent() }}
    <script>
        var options = {
            valueNames: ['name', 'email', 'actions', 'is_owner', 'is_member', 'is_pending'],
            page: 20,
            plugins: [
                ListPagination({})
            ]
        };

        var controlList = new List('member-list', options);
        var data = {{ memberList|json_encode|raw }};
        var activeFilters = [];


        var fMember = function (item) {
            return (item.values().is_member == true)
        };
        var fNew = function (item) {
            return (item.values().is_pending == true)
        };

        createList();

        document.getElementById('trigger-filter-none').onclick = function (e) {
            e.preventDefault();
            document.getElementById('filter-by-none').checked = 'checked';
            setFilter();
        };

        function setFilter(cb, filter) {
            if (filter) {
                if (cb.checked) {
                    activeFilters = [filter];
                } else {
                    activeFilters.splice(activeFilters.indexOf(filter), 1);
                }
            } else {
                // https://stackoverflow.com/questions/1232040/how-to-empty-an-array-in-javascript
                activeFilters.length = 0;
            }
            if (activeFilters.length > 0) {
                controlList.filter(listFilter);
            } else {
                controlList.filter();
            }
        }

        var listFilter = function (item) {
            var s = false;
            for (var i = 0; i < activeFilters.length; i++) {
                if (activeFilters[i](item) == true) s = true;
            }
            return s;
        };

        function submitButton(name, uid, action) {
            var gc = document.getElementById('group');
            var groupName = gc.options[gc.selectedIndex].text;

            var confirm = false;

            if (action === 'add') {
                confirm = window.confirm("Sicher, dass " + name + " zu " + groupName + " hinzugefügt werden soll?");
            } else if (action === 'activate') {
                confirm = window.confirm(name + " ist ein neues Mitglied und hat noch keinen Zugriff auf den SOG-Account. " +
                        "Wenn dir das Mitglied bekannt ist, kannst du es nun aktivieren und anschließend für deine Gruppe freischalten. " +
                        "Diese Überprüfung erfolgt aus Gründen des Datenschutzes.");
            } else {
                confirm = window.confirm("Sicher, dass " + name + " aus " + groupName + " entfernt werden soll?");
            }
            if (confirm) {
                document.getElementById('uid').value = uid;
                document.getElementById('action').value = action;
                $.post('/members/Mitglieder-verwalten', $('#send-action').serialize(), function(response){
                    console.log(response);
                });
            }
        }

        function createList() {
            controlList.clear();
            for (var i = 0; i < data.length; i++) {
                var owner = false;
                var member = false;
                var pending = false;
                var inactive = false;

                for (var j = 0; j < data[i]['userRoles'].length; j++) {
                    switch (data[i]['userRoles'][j]) {
                        case 'owner':
                            owner = true;
                            break;
                        case 'inactive':
                            inactive = true;
                            break;
                        case 'member':
                            member = true;
                            break;
                        case 'pending':
                            pending = true;
                    }
                }

                var email = '<a href="mailto:' + data[i]['email'] + '">' + data[i]['email'] + '<i class="icon-mail font-icon">&#xe802;</i></a>';
                var name = data[i]['name'];

                var buttons = '';

                if (inactive) {
                    name += '<span class="pure-button button-success inactive-badge">inaktiv</span>';
                    buttons = '<button onclick="submitButton(\'' + data[i]['name'] + '\', \'' + data[i]['uid'] + '\', \'activate\')" class="pure-button button-warning"><i class="icon-user-ok font-icon">&#xe822;</i>&ensp;freischalten</button>';
                } else {
                    if (member) {
                        buttons = '<button onclick="submitButton(\'' + data[i]['name'] + '\', \'' + data[i]['uid'] + '\', \'rm\')" class="pure-button button-error"><i class="icon-user-times font-icon">&#xe804;</i>&ensp;entfernen</button>';
                    } else {
                        buttons = '<button onclick="submitButton(\'' + data[i]['name'] + '\', \'' + data[i]['uid'] + '\', \'add\')" class="pure-button button-success"><i class="icon-user-plus font-icon">&#xe803;</i>&ensp;hinzuf&uuml;gen</button>';
                    }
                    if (pending) {
                        buttons += '<button onclick="submitButton(\'' + data[i]['name'] + '\', \'' + data[i]['uid'] + '\', \'rm-request\')" class="pure-button button-warning"><i class="icon-paper-plane font-icon">&#xe824;</i>&ensp;Anfrage ignorieren</button>';
                    }
                }

                controlList.add({
                    name: name,
                    email: email,
                    actions: buttons,
                    is_owner: owner,
                    is_member: member,
                    is_pending: pending
                });
            }

            // execute filters now, as the control list has been fully setup
            loadFilters();
        }

        function loadFilters() {
            setTimeout(function () {
                setFilter(document.getElementById('filter-by-member'), fMember);
                if (!controlList.filtered) loadFilters();
            }, 50);
        }
    </script>
{% endblock %}
